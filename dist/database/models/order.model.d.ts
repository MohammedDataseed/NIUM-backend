import { Model } from 'sequelize-typescript';
import { User } from './user.model';
import { Partner } from './partner.model';
import { ESign } from './esign.model';
import { Vkyc } from './vkyc.model';
import { OrderLog } from './order_log.model';
export declare class Order extends Model<Order> {
    id: string;
    serial_number: number;
    nium_order_id: string;
    hashed_key: string;
    partner_id: string;
    partner_hashed_api_key: string;
    partner_hashed_key: string;
    partner_order_id: string;
    transaction_type: string;
    purpose_type: string;
    is_esign_required: boolean;
    is_v_kyc_required: boolean;
    customer_name: string;
    customer_email: string;
    customer_phone: string;
    customer_pan: string;
    order_status: string;
    e_sign_status: string;
    e_sign_link: string;
    e_sign_link_status: string;
    e_sign_link_doc_id: string;
    e_sign_link_request_id: string;
    e_sign_link_expires: Date;
    e_sign_completed_by_customer: boolean;
    e_sign_customer_completion_date: Date;
    e_sign_doc_comments: string;
    v_kyc_reference_id: string;
    v_kyc_profile_id: string;
    v_kyc_status: string;
    v_kyc_link: string;
    v_kyc_link_status: string;
    v_kyc_link_expires: Date;
    v_kyc_completed_by_customer: boolean;
    v_kyc_customer_completion_date: Date;
    v_kyc_comments: string;
    incident_status: boolean;
    incident_checker_comments: string;
    nium_invoice_number: string;
    date_of_departure: Date;
    incident_completion_date: Date;
    is_esign_regenerated: boolean;
    is_esign_regenerated_details: any;
    is_video_kyc_link_regenerated: boolean;
    is_video_kyc_link_regenerated_details: any;
    created_by: string;
    updated_by: string;
    checker_id: string;
    creator: Partner;
    updater: Partner;
    checker: User;
    merged_document: {
        url: string;
        mimeType: string;
        size: number;
        createdAt: string;
        documentIds: string[];
    };
    esigns: ESign[];
    vkycs: Vkyc[];
    static generateHashedKey(instance: Order): void;
    static setSerialNumber(instance: Order): Promise<void>;
    static logInsert(instance: OrderLog, options: any): Promise<void>;
    static logUpdate(instance: OrderLog, options: any): Promise<void>;
    static logDelete(instance: OrderLog, options: any): Promise<void>;
}
